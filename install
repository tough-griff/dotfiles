#!/bin/bash

set -u

cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

if [[ -z "${USER-}" ]]; then
  USER=$(id -un)
fi

if [[ -n "$(command -v git)" ]]; then
  echo "Ensuring repository is up to date..."
  git pull origin main
  echo
fi

OS=$(uname -s)
case "$OS" in
"Darwin")
  source install-macos || exit 1
  ;;
"Linux")
  source install-linux || exit 1
  ;;
*)
  echo "ERROR: Unsupported system, aborting installation." && exit 1
  ;;
esac

if [[ -z "$(command -v stow)" ]]; then
  echo "ERROR: Unable to locate stow, aborting installation."
  exit 1
fi

stow -t "$HOME" -v editorconfig

FISH_PATH="$(command -v fish)"
if ! grep -F -q "$FISH_PATH" /etc/shells; then
  echo "Configuring /etc/shells"
  echo "$FISH_PATH" | sudo tee -a /etc/shells
  echo
fi
if [[ "$SHELL" != "$FISH_PATH" ]]; then
  echo "Configuring default shell: $FISH_PATH"
  chsh -s "$FISH_PATH"
  echo
fi
mkdir -p "$HOME/.config/fish/completions" "$HOME/.config/fish/conf.d" "$HOME/.config/fish/functions"
stow -t "$HOME" -v fish

touch git/.gitconfig.personal
stow -t "$HOME" -v git

stow -t "$HOME" -v login
stow -t "$HOME" -v node
stow -t "$HOME" -v psql

mkdir -p "$HOME/.ssh" && chmod 700 "$HOME/.ssh"
if [[ "$OS" == "Darwin" ]]; then
  mkdir -p "$HOME/.1password" && ln -sf "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" "$HOME/.1password/agent.sock"
fi

touch ssh/.ssh/config.personal
stow -t "$HOME" -v ssh

stow -t "$HOME" -v starship

stow -t "$HOME" -v zsh

# create "reverse" links so we can view config directories from this repo
ln -sf "$HOME/.aws" "$HOME/.config" "$HOME/.ssh" .

echo "Installation complete!"
echo "Exit and start a new terminal session to continue..."
