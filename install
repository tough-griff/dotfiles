#!/usr/bin/env bash

cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

if [[ -n $(command -v git) ]]; then
  echo "Ensuring repository is up to date..."
  git pull origin main
  echo
fi

case $(uname -s) in
"Darwin")
  source install-macos || exit 1
  ;;
"Linux")
  source install-linux || exit 1
  ;;
*)
  echo "ERROR: Unsupported system, aborting installation." && exit 1
  ;;
esac

if [[ -z $(command -v stow -t "$HOME") ]]; then
  echo "ERROR: Unable to locate stow -t "$HOME", aborting installation."
  exit 1
fi

stow -t "$HOME" -v editorconfig

FISH_PATH=$(command -v fish)
if ! grep -F -q "$FISH_PATH" /etc/shells; then
  echo "configuring /etc/shells"
  echo "$FISH_PATH" | sudo tee -a /etc/shells
  echo
fi
if [[ "$SHELL" != "$FISH_PATH" ]]; then
  echo "configuring default shell: $FISH_PATH"
  chsh -s "$FISH_PATH"
  echo
fi
mkdir -p "$HOME/.config/fish/completions" "$HOME/.config/fish/conf.d" "$HOME/.config/fish/functions"
stow -t "$HOME" -v fish

touch git/.gitconfig.personal
stow -t "$HOME" -v git

stow -t "$HOME" -v login
stow -t "$HOME" -v node
stow -t "$HOME" -v psql

mkdir -p "$HOME/.ssh" && chmod 700 "$HOME/.ssh"
touch ssh/.ssh/config.personal
stow -t "$HOME" -v ssh
if [[ ! -e "$HOME/.ssh/id_ed25519" ]]; then
  echo "generating ssh key"
  ssh-keygen -t ed25519 -a 100 -C "$(whoami)@$(hostname)"
fi
if [[ ! -e "$HOME/.ssh/id_rsa" ]]; then
  echo "generating ssh key (rsa)"
  ssh-keygen -t rsa -b 4096 -a 100 -C "$(whoami)@$(hostname)"
fi
chmod 644 "$HOME/.ssh/"*.pub

stow -t "$HOME" -v starship

# create "reverse" links so we can view config directories from this repo
ln -sf "$HOME/.aws" "$HOME/.config" "$HOME/.ssh" .

echo "Installation complete!"
echo "Exit and start a new terminal session to continue..."
