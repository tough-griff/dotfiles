#!/usr/bin/env bash

cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

echo "Ensuring repository is up to date..."
git pull origin main
echo

if ! command -v brew >/dev/null 2>&1; then
    echo "Unable to locate Homebrew, installing..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi
if command -v brew >/dev/null 2>&1; then
    brew bundle check || brew bundle install
    BREW_PREFIX=$(brew --prefix)
    BREW_BIN="$BREW_PREFIX/bin"
    echo

    if ! grep -F -q "$BREW_BIN" /etc/paths; then
        echo "configuring /etc/path for Homebrew"
        echo "$BREW_BIN" | cat - /etc/paths | sudo tee /etc/paths
        echo
    fi

    if ! grep -F -q "$BREW_BIN/fish" /etc/shells; then
        echo "configuring default shell: $BREW_BIN/fish"
        echo "$BREW_BIN/fish" | sudo tee -a /etc/shells
        chsh -s "$BREW_BIN/fish"
        echo
    fi
else
    echo "ERROR: Homebrew is still not in your PATH, aborting installation."
    exit 1
fi

if ! command -v stow >/dev/null 2>&1; then
    echo "ERROR: Unable to locate stow, aborting installation."
    exit 1
fi

stow -v editorconfig

mkdir -p "$HOME/.config/fish/completions" "$HOME/.config/fish/conf.d" "$HOME/.config/fish/functions"
stow -v fish

touch git/.gitconfig.personal
stow -v git

stow -v login
stow -v node
stow -v psql

mkdir -p "$HOME/.ssh" && chmod 700 "$HOME/.ssh" && touch "$HOME/.ssh/config.personal"
stow -v ssh
if [[ ! -e "$HOME/.ssh/id_ed25519" ]]; then
    echo "generating ssh key"
    ssh-keygen -t ed25519 -a 100 -C "$(whoami)@$(hostname)"
fi
if [[ ! -e "$HOME/.ssh/id_rsa" ]]; then
    echo "generating ssh key (rsa)"
    ssh-keygen -t rsa -b 4096 -C "$(whoami)@$(hostname)"
fi

# create "reverse" links so we can view config directories from this repo
ln -sf "$HOME/.aws" "$HOME/.config" "$HOME/.ssh" .

echo "Installation complete!"
echo "Exit and start a new terminal session to continue..."
