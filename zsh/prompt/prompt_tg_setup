# A simple ZSH prompt with git info
#
# ~/path ❯❯❯              (default)
# ~/repo git:master ❯❯❯   (in git repo)
#
# * shows to the right with unstaged changes
# + shows to the right with stages changes

# stolen from https://github.com/sorin-ionescu/prezto/blob/master/modules/prompt/functions/prompt_sorin_setup
# beautifully shortens paths like ~/dotfiles/zsh/prompt to ~/d/z/prompt
function prompt_tg_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _pwd="$MATCH"
    unset MATCH
  else
    _pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

function prompt_tg_git {
  command git rev-parse --abbrev-ref @'{u}' &>/dev/null || return

  prompt_tg_git_dirty=$(prompt_tg_check_git_dirty)
  prompt_tg_git_added=$(prompt_tg_check_git_added)
  prompt_tg_git_arrows=$(prompt_tg_check_git_ahead_behind)
}

function prompt_tg_check_git_dirty {
  local dirty=''
  (( $(command git status --porcelain --ignore-submodules -unormal 2>/dev/null | grep "^.M" | wc -l) > 0 )) && dirty="*"
  [[ "$dirty" != "" ]] && echo "${dirty}"
}

function prompt_tg_check_git_added {
  local added=''
  (( $(command git status --porcelain --ignore-submodules -unormal 2>/dev/null | grep "^M" | wc -l) > 0 )) && added="+"
  [[ "$added" != "" ]] && echo "${added}"
}

function prompt_tg_check_git_ahead_behind {
  local arrows=''
  (( $(command git rev-list --right-only --count HEAD...@'{u}' 2>/dev/null) > 0 )) && arrows="⇣"
  (( $(command git rev-list --left-only --count HEAD...@'{u}' 2>/dev/null) > 0 )) && arrows+="⇡"
  [[ "$arrows" != "" ]] && echo "${arrows}"
}

function prompt_tg_precmd {
  prompt_tg_pwd

  prompt_tg_git

  print -Pn "\e]0;"
  print -Pnr "${PWD/${HOME}/~}"
  print -Pn "\a"

  vcs_info

  unset prompt_tg_cmd_timestamp
}

# TODO
function prompt_tg_preexec {
  prompt_tg_cmd_timestamp=$EPOCHSECONDS

  print -Pn "\e]0;"
  print -Pnr "${PWD/${HOME}/~}"
  print -Pn "\a"
}

function prompt_tg_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  add-zsh-hook precmd prompt_tg_precmd
  add-zsh-hook preexec prompt_tg_preexec

  zstyle ':vcs_info:*' enable git
  zstyle ':vsc_info:*' use-simple true
  zstyle ':vcs_info:*' formats '%F{green}%s:%b%f '
  zstyle ':vcs_info:*' actionformats '%F{yellow}%s:%b:%a%f '

  PROMPT='%F{cyan}${_pwd}%f ${vcs_info_msg_0_}%F{red}%(!.# .)❯%f%F{yellow}❯%f%(?.%F{green}.%F{red})❯%f '
  PROMPT2='%F{yellow}%_%f %F{green}...%f '
  PROMPT3='%F{yellow}? %F{green}#%f '
  PROMPT4='%F{yellow}+%N:%i %F{green}❯%f '
  RPROMPT='%F{blue}${prompt_tg_git_dirty}%f%F{green}${prompt_tg_git_added}%f%F{cyan}${prompt_tg_git_arrows}%f'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_tg_setup "$@"
