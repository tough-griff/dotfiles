const repl = require('repl');

try {
  const chalk = require('chalk');
  const _ = require('lodash');

  const replServer = repl.start(`${chalk.green('⬡')} ${process.version} ${chalk.green('❯')} `);

  Object.defineProperty(replServer.context, '_', {
    value: _
  });

  Object.defineProperty(Array, 'toy', {
    /**
     * Generates an array of length `n` with values generated by the callback.
     * @param {number} n
     * @param {(num: number) => any} iteratee
     */
    value: function toy(n = 10, iteratee = i => i + 1) {
      return _.times(n, iteratee);
    }
  });

  Object.defineProperty(Object, 'toy', {
    /**
     * Generates an object of length `n` key value pairs. Each key and value is
     * can be generated by a callback.
     * @param {number} n
     * @param {(num: number) => string} keyIteratee
     * @param {(num: number) => any} valIteratee
     * @returns {{string: any}}
     */
    value: function toy(
      n = 10,
      keyIteratee = c => String.fromCharCode(96 + (c + 1)),
      valIteratee = i => i + 1
    ) {
      const array = Array.toy(n, keyIteratee);
      return _.zipObject(array, Array.toy(n, valIteratee));
    }
  });
} catch (err) {
  if (err.code === 'MODULE_NOT_FOUND') {
    console.log('Missing dependencies, installing in a separate process');
    console.log('Restart this interpreter later for improved functionality!');
    const { exec } = require('child_process');
    exec('npm install lodash chalk');
    repl.start();
  }
}
